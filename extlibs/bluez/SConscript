# ------------------------------------------------------------------------
# Copyright 2015 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

######################################################################
# BlueZ download script
#
# BlueZ is currently only used by the IoTivity Linux BLE transport.
# The IoTivity Linux BLE transport depends on two headers found in the
# BlueZ bluetooth library: <bluetooth/bluetooth.h> and
# <bluetooth/hci.h>.  Those headers are used solely when pulling in
# the types and constants necessary to a create kernel Bluetooth
# management socket.  There is no need to link BlueZ's libbluetooth
# library.
######################################################################
import os
import subprocess

Import('env')

# First check if the BlueZ bluetooth library development files are
# installed.  Add the location of the bluetooth library headers to the
# include path if they are installed.  Otherwise, download the BlueZ
# source code and adjust the include path, accordingly.

# The subprocess.run() function became available in Python 3.5.  Use
# the older high-level API instead, since some installations may still
# be using older versions of Python.
bluez_installed = (subprocess.call([ 'pkg-config',
                                     'bluez',
                                     '--exists' ]) == 0)

if bluez_installed:
        env.ParseConfig("pkg-config bluez --cflags-only-I")
        Return()

if not os.path.exists('bluez'):
        bluez = env.Action([
                'git clone git://git.kernel.org/pub/scm/bluetooth/bluez.git',
                'cd bluez && ln -s lib bluetooth && cd -'])

        print 'Downloading BlueZ ...'
        if env.Execute(bluez):
                print '''
*********************************** Error *********************************
* Please download Bluez 5.32 or better, build it and install it.          *
* Alternatively, but less preferrably, create a symbolic as follows       *
*     $ cd  extlibs/bluez                                                 *
*     $ git clone git://git.kernel.org/pub/scm/bluetooth/bluez.git        *
*     $ cd bluez                                                          *
*     $ ln -s lib bluetooth                                               *
*     $ cd ../../..                                                       *
***************************************************************************
'''
                Exit(1)
        else:
                print 'BlueZ download complete.'

env.AppendUnique(CPPPATH = ['#extlibs/bluez/bluez'])


# Local Variables:
# mode:python
# indent-tabs-mode: nil
# End:
