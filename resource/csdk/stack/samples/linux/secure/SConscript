
Import('env')

samples_env = env.Clone()
######################################################################
# Build flags
######################################################################
samples_env.PrependUnique(CPPPATH = [
		'../../../../ocsocket/include',
		'../../../../logger/include',
		'../../../../stack/include',
		'../../../../../../extlibs/cjson',
		'../../../../../oc_logger/include'
		])

target_os = env.get('TARGET_OS')
if target_os not in ['windows', 'winrt']:
	samples_env.AppendUnique(CXXFLAGS = ['-std=c++0x', '-Wall', '-pthread'])

	# Note: 'pthread' is in libc for android.
	if target_os != 'android':
		samples_env.AppendUnique(LIBS = ['-lpthread'])

samples_env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
samples_env.PrependUnique(LIBS = ['oc', 'octbstack', 'm', 'coap', 'coap_csdk', 'oc_logger', 'connectivity_abstraction'])
if env.get('SECURED') == '1':
    samples_env.AppendUnique(LIBS = ['tinydtls'])

samples_env.Append(LINKFLAGS = ['-Wl,--no-as-needed'])

samples_env.ParseConfig('pkg-config --libs glib-2.0');

if target_os == 'android':
	samples_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
	samples_env.AppendUnique(LIBS = ['gnustl_static'])
	samples_env.AppendUnique(CPPDEFINES = ['_GLIBCXX_USE_C99=1', '_GLIBCXX_HAVE_WCSTOF=1'])

	if not env.get('RELEASE'):
		samples_env.AppendUnique(LIBS = ['log'])

if target_os in ['darwin', 'ios']:
	samples_env.AppendUnique(CPPDEFINES = ['_DARWIN_C_SOURCE'])

samples_env.AppendUnique(CPPDEFINES = ['CA_INT', 'CA_INT_DTLS', 'TB_LOG'])

######################################################################
# Source files and Targets
######################################################################
ocserverbasicops = samples_env.Program('ocserverbasicops', ['common.cpp', 'ocserverbasicops.cpp'])
occlientbasicops = samples_env.Program('occlientbasicops', ['common.cpp', 'occlientbasicops.cpp'])
gen_sec_bin = samples_env.Program('gen_sec_bin', ['gen_sec_bin.cpp'])


Alias("samples", [ocserverbasicops, occlientbasicops])

env.AppendTarget('samples')
