##
# This script includes windows specific config (MSVS/MSVC)
##
Import('env')
import os.path

# Set common flags
if env['CC'] == 'cl':
    # Enable warnings as errors.
    env.AppendUnique(CCFLAGS=[
        '/we4133'])  # C4133 incompatible type conversion

    env.AppendUnique(CCFLAGS=['/EHsc'])

    # Set release/debug flags
    if env.get('RELEASE'):
        env.AppendUnique(CCFLAGS = ['/MD', '/O2', '/GF'])
        env.AppendUnique(CPPDEFINES = ['NDEBUG'])
    else:
        env.AppendUnique(CCFLAGS = ['/MDd', '/Od', '/RTC1'])
        env.AppendUnique(LINKFLAGS = ['/debug'])
    env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
    env.AppendUnique(PATH = os.environ['PATH'])
    env['PDB'] = '${TARGET.base}.pdb'
    env.Append(LINKFLAGS=['/PDB:${TARGET.base}.pdb'])

    # Add Windows-specific libraries
    env.AppendUnique(LIBS = ['bcrypt', 'ws2_32', 'advapi32', 'iphlpapi', 'crypt32', 'kernel32'])

    # Visual Studio compiler complains that functions like strncpy are unsafe. We
    # are aware that it's possible to create a non-null terminated string using the
    # strncpy function.  However, the str*_s functions are not standard and thus
    # will not work on all systems supported by IoTivity. This will prevent Visual
    # Studio from displaying unwanted warnings.
    # See https://msdn.microsoft.com/en-us/library/ttcz0bys.aspx for more details.
    env.AppendUnique(CPPDEFINES=['_CRT_SECURE_NO_WARNINGS', '_CRT_NONSTDC_NO_WARNINGS'])

elif env['CC'] == 'gcc':
    print "\nError: gcc not supported on Windows.  Use Visual Studio!\n"
    Exit(1);

