##
# This script includes windows specific config (MSVS/MSVC)
##
Import('env')
import os.path

# Set common flags
if env['CC'] == 'cl':
	# C4244 conversion from one type to another type results in a possible loss of data.
	# C4267 conversion from size_t to a smaller type.
	# C4355 'this' used in base member initializer list.
	# C4800 forcing value to bool 'true' or 'false'.
	# C4996 deprecated declaration.
	# C4820 added padding to the end of a struct.
	# C4514 unreferenced inline function has been removed
	# C4365 signed/unsigned mismatch
	# C4503 decorated name length exceeded, name was truncated
	env.AppendUnique(CXXFLAGS=['/wd4244', '/wd4267', '/wd4355', '/wd4800', '/wd4996', '/wd4820', '/wd4514', '/wd4365', '/wd4503'])
	env.AppendUnique(CCFLAGS=['/EHsc'])

	# Enable special exports for unit test purposes
	if env.get('TEST') == '1':
		env.AppendUnique(CPPDEFINES = ['ENABLE_TEST_EXPORTS'])
	# Set release/debug flags
	if env.get('RELEASE'):
		env.AppendUnique(CCFLAGS = ['/MD', '/O2', '/GF'])
		env.AppendUnique(CPPDEFINES = ['NDEBUG'])
	else:
		env.AppendUnique(CCFLAGS = ['/MDd', '/Od', '/ZI', '/RTC1', '/Gm'])
		env.AppendUnique(LINKFLAGS = ['/debug'])
	env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
	env.AppendUnique(PATH = os.environ['PATH'])

elif env['CC'] == 'gcc':
	print "\nError: gcc not supported on Windows.  Use Visual Studio!\n"
	Exit(1);

