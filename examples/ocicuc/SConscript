##
# Examples build script
##
Import('env', 'RELEASE_BUILD', 'BUILD_TARGET', 'BUILD_DIR', 'SRC_TOP_DIR')
# Add third party libraries
SConscript(SRC_TOP_DIR + '/third_party_libs.scons')
ocicuc_env = env.Clone()

######################################################################
# Build flags
######################################################################
ocicuc_env.AppendUnique(CPPPATH = [
		'../../include/',
		'../../csdk/stack/include',
		'../../csdk/ocsocket/include',
		'../../csdk/ocrandom/include',
		'../../csdk/logger/include',
		'../../oc_logger/include'
		])

ocicuc_env.AppendUnique(LIBPATH = [BUILD_DIR])
ocicuc_env.PrependUnique(LIBS = ['oc', 'octbstack', 'coap', 'oc_logger'])

if BUILD_TARGET not in ['windows', 'winrt']:
	ocicuc_env.AppendUnique(CXXFLAGS = ['-std=c++11'])

if BUILD_TARGET == 'android':
	ocicuc_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
	ocicuc_env.AppendUnique(CPPDEFINES = ['_GLIBCXX_USE_C99=1', '_GLIBCXX_HAVE_WCSTOF=1'])
	ocicuc_env.AppendUnique(LIBS = ['boost_program_options-gcc-mt-1_49', 'boost_thread-gcc-mt-1_49', 'gnustl_static'])
	ocicuc_env.AppendUnique(LINKFLAGS = ['-static'])

	if not RELEASE_BUILD:
		ocicuc_env.AppendUnique(LIBS = ['log'])

if BUILD_TARGET == 'darwin':
	ocicuc_env.AppendUnique(LIBS = ['boost_program_options'])

######################################################################
# Source files and Targets
######################################################################
client = ocicuc_env.Program('client', ['client.cpp', 'driver.cpp', 'utility.cpp'])
server = ocicuc_env.Program('server', ['server.cpp', 'driver.cpp', 'utility.cpp', 'light_resource.cpp'])
monoprocess = ocicuc_env.Program('monoprocess',
		['monoprocess.cpp', 'driver.cpp', 'utility.cpp', 'light_resource.cpp'])

Alias("examples_ocicuc", [client, server, monoprocess])
env.AppendUnique(TS = ['examples_ocicuc'])
