#******************************************************************
#
# Copyright 2016 Samsung Electronics All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

##
# Notification Service c++ wrapper build script
##

import platform
Import('env')

if env.get('RELEASE'):
	env.AppendUnique(CCFLAGS = ['-Os'])
	env.AppendUnique(CPPDEFINES = ['NDEBUG'])
else:
	env.AppendUnique(CCFLAGS = ['-g'])

if env.get('LOGGING'):
	env.AppendUnique(CPPDEFINES = ['TB_LOG'])

lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/service/third_party_libs.scons', 'lib_env')
notification_env = lib_env.Clone()

target_os = env.get('TARGET_OS')

######################################################################
# Build flags
######################################################################
notification_env.AppendUnique(CPPPATH = ['../../include'])
notification_env.AppendUnique(CPPPATH = ['inc'])
notification_env.AppendUnique(CPPPATH = ['../common'])
notification_env.AppendUnique(CPPPATH = ['../provider/inc'])
notification_env.AppendUnique(CPPPATH = ['../../src/common'])

notification_env.PrependUnique(LIBS = [
	'oc_logger',
	'libnotification_consumer'
	])
notification_env.AppendUnique(CXXFLAGS = ['-O2', '-Wall', '-fmessage-length=0', '-std=c++0x','-frtti'])
if target_os == 'android':
    notification_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
    notification_env.PrependUnique(LIBS = ['gnustl_shared', 'log'])

######################################################################
# Source files and Targets
######################################################################

notification_consumer_src = [
	env.Glob('src/*.cpp'),env.Glob('../common/*.cpp')]

consumersdk = notification_env.SharedLibrary('notification_consumer_wrapper', notification_consumer_src)
notification_env.InstallTarget(consumersdk, 'libnotification_consumer_wrapper')
notification_env.UserInstallTargetLib(consumersdk, 'libnotification_consumer_wrapper')
