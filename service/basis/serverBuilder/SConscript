#******************************************************************
#
# Copyright 2015 Samsung Electronics All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

##
# things_manager project build script
##
import os
Import('env')

# Add third party libraries
lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/service/third_party_libs.scons', exports = 'lib_env')

server_builder_env = lib_env.Clone()
target_os = env.get('TARGET_OS')

release = env.get('RELEASE')

######################################################################
# Build flags
######################################################################
server_builder_env.AppendUnique(CPPPATH = [
    '../common/primitiveResource/include/',
    ])

server_builder_env.AppendUnique(CPPPATH = [env.get('SRC_DIR')+'/extlibs', 'include', 'src'])

if target_os not in ['windows', 'winrt']:
    server_builder_env.AppendUnique(CXXFLAGS = ['-std=c++0x', '-Wall'])
    if target_os != 'android':
        server_builder_env.AppendUnique(CXXFLAGS = ['-pthread'])

if target_os == 'android':
    server_builder_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
    server_builder_env.PrependUnique(LIBS = ['gnustl_shared', 'compatibility', 'log'])

server_builder_env.AppendUnique(LIBS = ['dl'])

if not release:
    server_builder_env.AppendUnique(CXXFLAGS = ['--coverage'])
    server_builder_env.PrependUnique(LIBS = ['gcov'])

######################################################################
# Source files and Targets
######################################################################
server_builder_src = env.Glob('src/*.cpp')
server_builder_static = server_builder_env.StaticLibrary('ServerBuilder', server_builder_src)
server_builder_shared = server_builder_env.SharedLibrary('ServerBuilder', server_builder_src)

server_builder_env.InstallTarget([server_builder_static,server_builder_shared], 'libServerBuilder')

