##
# linux sample app  build script
##

Import('env')

# Add third party libraries
lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/service/third_party_libs.scons', 'lib_env')
linux_sample_env = lib_env.Clone()

######################################################################
# Build flags
######################################################################
linux_sample_env.AppendUnique(CPPPATH = ['include'])
linux_sample_env.AppendUnique(CPPPATH = ['../../../sdk/inc'])
linux_sample_env.AppendUnique(CPPPATH = ['../../../sdk/src'])
linux_sample_env.AppendUnique(CXXFLAGS = ['-std=c++0x', '-Wall', '-pthread'])
linux_sample_env.AppendUnique(CPPDEFINES = ['LINUX'])
linux_sample_env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
linux_sample_env.AppendUnique(LIBS = ['libTGMSDKLibrary', 'oc', 'octbstack',
										'coap_csdk', 'connectivity_abstraction',
										'libcoap', 'liboc_logger', 'dl', 'pthread'])
if env.get('SECURED') == '1': 
    linux_sample_env.AppendUnique(LIBS = ['tinydtls'])
linux_sample_env.ParseConfig('pkg-config --libs glib-2.0')

######################################################################
#build sampleapp
######################################################################
groupserver = linux_sample_env.Program('groupserver', 'groupserver.cpp')
lightserver = linux_sample_env.Program('lightserver', 'lightserver.cpp')
bookmark = linux_sample_env.Program('bookmark', 'bookmark.cpp')
Alias("GroupServerApp", groupserver)
Alias("LightServerApp", lightserver)
Alias("BookmarkApp", bookmark)
env.AppendTarget('GroupServerApp')
env.AppendTarget('LightServerApp')
env.AppendTarget('BookmarkApp')
